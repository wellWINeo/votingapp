// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VotingApp.Web.Infrastructure;

#nullable disable

namespace VotingApp.Web.Migrations
{
    [DbContext(typeof(VotingAppContext))]
    [Migration("20230502133328_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VoteResultVoteValue", b =>
                {
                    b.Property<Guid>("ResultsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ValuesId")
                        .HasColumnType("uuid");

                    b.HasKey("ResultsId", "ValuesId");

                    b.HasIndex("ValuesId");

                    b.ToTable("VoteResultVoteValue");
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VoteForm");
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FormId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("VoteResult");
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FormId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("VoteValue");
                });

            modelBuilder.Entity("VoteResultVoteValue", b =>
                {
                    b.HasOne("VotingApp.Web.Models.Entities.VoteResult", null)
                        .WithMany()
                        .HasForeignKey("ResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VotingApp.Web.Models.Entities.VoteValue", null)
                        .WithMany()
                        .HasForeignKey("ValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteResult", b =>
                {
                    b.HasOne("VotingApp.Web.Models.Entities.VoteForm", "Form")
                        .WithMany("Results")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteValue", b =>
                {
                    b.HasOne("VotingApp.Web.Models.Entities.VoteForm", "Form")
                        .WithMany("Options")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("VotingApp.Web.Models.Entities.VoteForm", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
